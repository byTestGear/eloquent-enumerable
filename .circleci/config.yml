version: 2

jobs:
  build:
    working_directory: ~/byTestGear/eloquent-incrementable

    environment:
      BASH_ENV: ~/.bashrc

    docker:
      - image: circleci/php:7.2-node-browsers
        environment:
          APP_ENV: testing

      - image: circleci/mysql:5.7
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD=true
          - MYSQL_ROOT_PASSWORD=ubuntu
          - MYSQL_USER=ubuntu
          - MYSQL_PASSWORD=ubuntu
          - MYSQL_DATABASE=circle_test

    steps:
      - run:
          name: Install System Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y libsqlite3-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev zlib1g-dev

      - run:
          name: Install PHP Extensions
          command: |
            sudo docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
            sudo docker-php-ext-install -j$(nproc) iconv gd zip pdo_mysql pdo_sqlite
            sudo rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

      - run:
          name: Update Composer
          command: sudo composer self-update

      - checkout

      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run:
          name: Install Composer Dependencies
          command: composer install -n --ignore-platform-reqs
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      - run:
          name: PHP CS Fixer
          command: vendor/bin/php-cs-fixer fix --config=.php_cs --diff --dry-run --verbose
      - run:
          name: PHPLOC
          command: |
            mkdir -p ./logs/phploc
            vendor/bin/phploc app --no-interaction --log-xml=logs/phploc/junit.xml
      - run:
          name: PHPCS
          command: |
            mkdir -p ./logs/phpcs
            vendor/bin/phpcs --standard="PSR1,PSR2" -v --report=junit --report-file=logs/phpcs/junit.xml app/
      - run:
          name: PHP Mess Detector
          command: |
            mkdir -p ./logs/phpmd
            vendor/bin/phpmd app text phpmd-ruleset.xml > logs/phpmd/phpmd.log
      - run:
          name: Run Unit Tests
          command: |
            mkdir -p ./logs/phpunit
            vendor/bin/phpunit -d memory_limit=512M --log-junit logs/phpunit/junit.xml --testdox-html logs/phpunit/testdox.html

      - run:
          name: Start Chrome Driver
          command: ./vendor/laravel/dusk/bin/chromedriver-linux
          background: true

      - run:
          name: Run Laravel Server
          command: php artisan serve
          background: true
          environment:
            DB_CONNECTION: mysql
            DB_DATABASE: circle_test
            DB_USERNAME: root
            DB_PASSWORD: ubuntu
            SESSION_DRIVER: database
            TENANCY_SYSTEM_CONNECTION_NAME: mysql
            TENANCY_TENANT_CONNECTION_NAME: mysql

      - store_artifacts:
          path: ./logs/phploc
          destination: phploc

      - store_artifacts:
          path: ./logs/phpcs
          destination: phpcs

      - store_artifacts:
          path: ./logs/phpmd
          destination: phpmd

      - store_artifacts:
          path: ./logs/phpunit
          destination: phpunit

      - store_artifacts:
          path: ./storage/logs
          destination: laravel
